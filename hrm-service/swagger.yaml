openapi: 3.0.0
servers:
  - description: localhost
    url: http://localhost:8080
  - description: staging
    url: https://hrm-staging.tl.techmatters.org
info:
  version: 0.3.6
  title: HRM
tags:
  - name: cases
  - name: contacts
paths:
  /cases:
    get:
      tags:
        - cases
      summary: list cases for a helpline
      operationId: getCases
      parameters:
        - in: query
          name: helpline
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Fetched cases
          content:
              application/json:
                schema:
                  type: array
                  items:
                    allOf:
                      - $ref: '#/components/schemas/SequelizeRecord'
                      - $ref: '#/components/schemas/Case'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    post:
      tags:
        - cases
      summary: create case
      operationId: createCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
        description: Case to create
      responses:
        '200':
          description: Created case
          content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/SequelizeRecord'
                    - $ref: '#/components/schemas/Case'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /cases/{caseId}:
    put:
      tags:
        - cases
      summary: update case
      operationId: updateCase
      parameters:
        - name: caseId
          in: path
          description: ID of case to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
        description: Case to create
      responses:
        '200':
          description: Created case
          content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/SequelizeRecord'
                    - $ref: '#/components/schemas/Case'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Case not found
  /cases/{caseId}/activities:
    get:
      tags:
        - cases
      summary: fetch case activities
      operationId: getCaseActivities
      parameters:
        - name: caseId
          in: path
          description: ID of case
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Activities of the case
          content:
            application/json:
              schema:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/Activity'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Case not found        
  /contacts:
    post:
      tags:
        - contacts
      summary: create a new contact
      operationId: createContact
      parameters:
        - name: rawJson
          in: body
          description: Raw contact form object
          required: true
          schema:
            type: object
            example: { "callType": {}, "callerInformation": {}, "childInformation": {}, "caseInformation": {} }
        - name: queueName
          in: body
          description: Name of the queue where this contact was taken
          schema:
            type: string
            example: Admin
        - name: twilioWorkerId
          in: body
          description: Id of the Twilio worker that took the contact
          schema:
            type: string
            example: WZd3d289370720216aab7e3dc023e80f5f
        - name: helpline
          in: body
          description: Helpline where the contact took place
          schema:
            type: string
            example: Toronto Line
        - name: number
          in: body
          description: Number of the caller for this contact
          schema:
            type: string
            example: '+12025550163'
        - name: channel
          in: body
          description: Channel where this contact took place
          schema:
            type: string
            example: 'web'
        - name: conversationDuration
          in: body
          description: Duration in seconds of this contact
          schema:
            type: integer
            format: int32
            example: 42
        - name: accountSid
          in: body
          description: Id of the Twilio account that took the contact
          schema:
            type: string
            example: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        - name: timeOfContact
          in: body
          description: Date-time of the contact (EPOCH timestamp)
          schema:
            type: integer
            format: int32
            example: 1565827981000
      responses:
        '200':
          description: Created contact
          content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/SequelizeRecord'
                    - $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /contacts/{contactId}/connectToCase:
    put:
      tags:
        - contacts
      summary: connect contact to a given case
      operationId: connectToCase
      parameters:
        - name: contactId
          in: path
          description: ID of contact to connect
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - caseId
              properties:
                caseId:
                  type: integer
                  format: int32
                example: { "caseId": 1 }
        description: caseId to connect to
      responses:
        '200':
          description: Connected contact to case
          content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/SequelizeRecord'
                    - $ref: '#/components/schemas/Contact'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Case or contact not found
  /contacts/search:
    post:
      tags:
        - contacts
      summary: search contacts
      operationId: searchContacts
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchContact'
        description: Case to create
      responses:
        '200':
          description: Search contacts result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchContactsResult'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
  /cases/search:
    post:
      tags:
        - cases
      summary: search cases
      operationId: searchCases
      parameters:
        - in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
        - in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchContact'
        description: Case to search
      responses:
        '200':
          description: Search cases result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCasesResult'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
components:
  schemas:
    SequelizeRecord:
      type: object
      required:
        - id
        - createdAt
        - updatedAt
      properties:
        id:
          type: integer
          format: int32
          example: 27
        createdAt:
          type: string
          format: date-time
          example: '2020-03-19T15:03:03.042Z'
        updatedAt:
          type: string
          format: date-time
          example: '2020-04-29T22:18:19.663Z'
    Case:
      type: object
      required:
        - status
        - helpline
        - info
        - twilioWorkerId
      properties:
        status:
          type: string
          example: open
        helpline:
          type: string
          example: helpline-1
        info:
          type: object
          example: { "notes": "Child with covid-19" }
        twilioWorkerId:
          type: string
          example: WZd3d289370720216aab7e3dc023e80f5f
        accountSid:
          type: string
          example: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        connectedContacts:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/SequelizeRecord'
              - $ref: '#/components/schemas/Contact'
    Contact:
      type: object
      required:
        - reservationId
        - rawJson
        - queueName
        - twilioWorkerId
        - helpline
        - number
        - channel
        - conversationDuration
        - caseId
        - timeOfContact
      properties:
        timestamp:
          type: integer
          format: int64
          example: 1565827981000
        reservationId:
          type: string
          example: WS17ce7c9cf654a4b240031ff7b17e7d93
        rawJson:
          type: object
          example: { "callType": {}, "callerInformation": {}, "childInformation": {}, "caseInformation": {} }
        queueName:
          type: string
          example: Admin
        twilioWorkerId:
          type: string
          example: WZd3d289370720216aab7e3dc023e80f5f
        helpline:
          type: string
          example:
        number:
          type: string
          example: '+12025550163'
        channel:
          type: string
          example: web
        conversationDuration:
          type: integer
          format: int32
          example: 42
        caseId:
          type: integer
          format: int32
          example: 1
        accountSid:
          type: string
          example: ACXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
        timeOfContact:
          type: integer
          format: int64
          example: 1565827981000
    Activity:
      type: object
      required:
        - date
        - type
        - text
        - twilioWorkerId
      properties:
        date:
          type: string
          format: date-time
          example: '2020-30-07 18:55:20'
        type:
          type: string
          example: note
        text:
          type: string
          example: Child needs help
        twilioWorkerId:
          type: string
          example: WZd3d289370720216aab7e3dc023e80f5f
    SearchContact:
      type: object
      required:
        - helpline
        - firstName
        - lastName
        - counselor
        - phoneNumber
        - dateFrom
        - dateTo
        - onlyDataContacts
      properties:
        helpline:
          type: string
          example: helpline-1
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Doe
        counselor:
          type: string
          example: WZd3d289370720216aab7e3dc023e80f5f
        phoneNumber:
          type: string
          example: '+12025550163'
        dateFrom:
          type: string
          format: date-time
          example: '2020-03-19T15:03:03.042Z'
        dateTo:
          type: string
          format: date-time
          example: '2020-03-19T15:03:03.042Z'
        onlyDataContacts:
          type: boolean
          example: true
    SearchContactsResult:
      type: object
      required:
        - count
        - contacts
      properties:
        count:
          type: integer
          format: int32
          example: 1
        contacts:
          type: array
          items:
            type: object
            properties:
              contactId:
                type: string
                example: WS17ce7c9cf654a4b240031ff7b17e7d93
              overview:
                type: object
                properties:
                  dateTime:
                    type: string
                    format: date-time
                    example: '2020-03-19T15:03:03.042Z'
                  name:
                    type: string
                    example: Jhon
                  customerNumber:
                    type: string
                    example: '+12025550163'
                  callType:
                    type: string
                    example: Child calling about self
                  categories:
                    type: object
                    example: {}
                  counselor:
                    type: string
                    example: WZd3d289370720216aab7e3dc023e80f5f
                  notes:
                    type: string
                    example: Child needs help
                  channel:
                    type: string
                    example: web
                  conversationDuration:
                    type: integer
                    format: int32
                    example: 42
              details:
                type: object
                properties:
                  timestamp:
                    type: integer
                    format: int64
                    example: 1565827981000
                  reservationId:
                    type: string
                    example: WS17ce7c9cf654a4b240031ff7b17e7d93
                  rawJson:
                    type: object
                    example: { "callType": {}, "callerInformation": {}, "childInformation": {}, "caseInformation": {} }
                  queueName:
                    type: string
                    example: Admin
                  twilioWorkerId:
                    type: string
                    example: WZd3d289370720216aab7e3dc023e80f5f
                  helpline:
                    type: string
                    example:
                  number:
                    type: string
                    example: '+12025550163'
                  channel:
                    type: string
                    example: web
                  conversationDuration:
                    type: integer
                    format: int32
                    example: 42
                  caseId:
                    type: integer
                    format: int32
                    example: 1
    SearchCasesResult:
      type: object
      required:
        - count
        - cases
      properties:  
        count:
          type: integer
          format: int32
          example: 1
        cases:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/SequelizeRecord'
              - $ref: '#/components/schemas/Case'
  responses:
    UnauthorizedError:
      description: API Key is missing or invalid
  securitySchemes:
    apiKey:
      type: apiKey
      in: header
      name: Authorization
security:
  - apiKey: []