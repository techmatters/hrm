{
  "name": "@tech-matters/hrm-base",
  "version": "1.0.0",
  "description": "",
  "author": "",
  "license": "AGPL",
  "workspaces": [
    "packages/*",
    "hrm-service",
    "jobs/*",
    "resources-service"
  ],
  "dependencies": {
    "@aws-cdk/aws-iam": "^1.176.0",
    "@aws-cdk/aws-lambda": "^1.176.0",
    "@aws-cdk/aws-lambda-event-sources": "^1.176.0",
    "@aws-cdk/aws-lambda-nodejs": "^1.176.0",
    "@aws-cdk/aws-s3": "^1.176.0",
    "@aws-cdk/aws-sns": "^1.198.1",
    "@aws-cdk/aws-sns-subscriptions": "^1.198.1",
    "@aws-cdk/aws-sqs": "^1.176.0",
    "@aws-cdk/aws-ssm": "^1.176.0",
    "@aws-cdk/core": "^1.176.0",
    "@maildrop/api": "^1.0.27",
    "dotenv": "^16.0.3"
  },
  "devDependencies": {
    "@tsconfig/node16": "^1.0.3",
    "@types/aws-lambda": "^8.10.108",
    "@types/jest": "^26.0.24",
    "@types/node": "^14.14.26",
    "@types/node-fetch": "^2.5.10",
    "@types/redis": "^2.8.29",
    "@typescript-eslint/eslint-plugin": "^5.40.1",
    "@typescript-eslint/parser": "^5.40.1",
    "aws-cdk": "^2.45.0",
    "aws-cdk-local": "^2.15.0",
    "aws-sdk": "^2.1231.0",
    "cross-env": "^7.0.3",
    "esbuild": "^0.15.13",
    "eslint": "^8.2.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-config-airbnb-typescript": "^16.1.4",
    "eslint-config-prettier": "^6.10.0",
    "eslint-import-resolver-typescript": "^2.7.0",
    "eslint-plugin-import": "^2.25.3",
    "eslint-plugin-jest": "^23.8.2",
    "eslint-plugin-prettier": "^3.4.1",
    "jest": "^28.1.3",
    "jest-config": "^28.1.3",
    "npm-run-all": "^4.1.5",
    "prettier": "^1.19.1",
    "ts-jest": "^28.0.8",
    "ts-node": "^10.9.1",
    "typescript": "^4.8.4",
    "wait-on": "^7.0.1"
  },
  "scripts": {
    "build": "tsc -b --verbose",
    "build-and-start": "run-s build start",
    "build-and-start:service": "run-s build start:service",
    "start": "run-s start:db start:localstack start:es start:service",
    "migrate": "npm run migrate --workspaces --if-present",
    "start:db": "run-s docker:compose:db-persistent:up waiton:db migrate",
    "start:es": "run-s docker:compose:es:up waiton:es es:create-index",
    "start:localstack": "cross-env AWS_REGION=us-east-1 run-s localstack:init",
    "start:service": "cross-env AWS_REGION=us-east-1 run-p start:service:*",
    "start:service:api": "cross-env AWS_REGION=us-east-1 SSM_ENDPOINT=http://localhost:4566 PORT=8080 INTERNAL_SERVICES_PORT=8081 npm run start -w hrm-service",
    "start:service:job-processor": "cross-env AWS_REGION=us-east-1 SSM_ENDPOINT=http://localhost:4566 npm run start:job-processor -w hrm-service",
    "docker:build": "npm run docker:build --workspaces --if-present",
    "docker:compose:down": "docker-compose -p hrm down",
    "docker:compose:logs": "docker-compose -p hrm logs -f",
    "docker:compose:up": "run-s docker:compose:*:up",
    "docker:compose:db:up": "docker-compose -p hrm -f hrm-service/docker-database/docker-compose.yml up -d",
    "docker:compose:db-persistent:up": "docker-compose -p hrm -f hrm-service/docker-database/docker-compose-persistent.yml up -d",
    "docker:compose:es:up": "docker-compose -p hrm -f docker-compose.es.yml up -d",
    "docker:compose:es:down": "docker-compose -p hrm -f docker-compose.es.yml down",
    "docker:compose:jobs:up": "completed_sqs_queue_url=$(npx ts-node jobs/tests/getContactCompleteQueueUrl.ts) docker-compose -p hrm -f jobs/docker-compose.yml up -d",
    "docker:compose:localstack:up": "docker-compose -p hrm up -d",
    "docker:compose:service:up": "docker-compose -p hrm -f hrm-service/docker-compose.yml up -d",
    "es:create-index": "npm run es:create-index:local --workspaces --if-present",
    "lint": "cross-env eslint .",
    "lint:fix": "npm run lint -- --fix",
    "localstack:bootstrap": "wait-on http://localhost:4566 && cross-env AWS_REGION=us-east-1 cdklocal bootstrap",
    "localstack:deploy": "cross-env AWS_REGION=us-east-1 cdklocal deploy --all --outputs-file ./cdk/outputs.json",
    "localstack:destroy": "cross-env AWS_REGION=us-east-1 cdklocal destroy --all",
    "localstack:diff": "cross-env AWS_REGION=us-east-1 cdklocal diff",
    "localstack:init": "run-s docker:compose:localstack:up build localstack:bootstrap localstack:deploy",
    "localstack:synth": "cross-env AWS_REGION=us-east-1 cdklocal synth --all",
    "localstack:down": "run-s docker:compose:localstack:down",
    "test": "run-s build test:run",
    "test:run": "run-p test:unit test:service test:e2e",
    "test:coverage": "npm run test:coverage --workspaces --if-present",
    "test:e2e": "run-s start:localstack test:e2e:run",
    "test:e2e:run": "cross-env AWS_REGION=us-east-1 npm run test:e2e --workspaces --if-present",
    "test:migrate": "npm run test:migrate --workspaces --if-present",
    "test:service": "run-s docker:compose:es:up waiton:es test:service:run",
    "test:service:run": "npm run test:service --workspaces --if-present",
    "test:service:ci": "npm run test:service:ci --workspaces --if-present",
    "test:unit": "npm run test:unit --workspaces --if-present",
    "test:docker:jobs": "run-s test:docker:jobs:*",
    "test:docker:jobs:contact-complete": "curl -XPOST \"http://localhost:9000/2015-03-31/functions/function/invocations\" -d \"$(cat jobs/contact-complete/tests/testPayload.json)\"",
    "test:docker:jobs:contact-retrieve-recording-url": "curl -XPOST \"http://localhost:9001/2015-03-31/functions/function/invocations\" -d \"$(cat jobs/contact-retrieve-recording-url/tests/testPayload.json)\"",
    "test:docker:jobs:contact-retrieve-transcript": "curl -XPOST \"http://localhost:9002/2015-03-31/functions/function/invocations\" -d \"$(cat jobs/contact-retrieve-transcript/tests/testPayload.json)\"",
    "ssm:local": "run-p ssm:local:*",
    "ssm:local:base": "run-p ssm:local:base:*",
    "ssm:local:base:cdk": "docker run --rm -v ~/.aws:/home/aws/.aws -e AWS_DEFAULT_REGION -e AWS_ACCESS_KEY_ID -e AWS_SECRET_ACCESS_KEY interrobangc/awscli2 ssm get-parameter --name \"/local/hrm/cdk/.env\" --with-decryption --query \"Parameter.Value\" --output text > ./cdk/.env",
    "ssm:local:workspaces": "npm run ssm:local --workspaces --if-present",
    "license:add": "docker run --rm -v ${PWD}:/src ghcr.io/google/addlicense -c \"Technology Matters\" -y \"2021-2023\" -ignore \".idea/**\" -ignore \"**/node_modules/**\" -ignore \"**/dist/**\" -ignore \"**/coverage/**\" -ignore \"cdk.out/**\" -ignore \"resources-service/scripts\" -ignore \"resources-service/resource-json/**\" -ignore \"**/scripts-dist/**\" -f license-header.tpl .",
    "license:check": "docker run --rm -v ${PWD}:/src ghcr.io/google/addlicense -check -c \"Technology Matters\" -y \"2021-2023\" -ignore \".idea/**\" -ignore \"**/node_modules/**\" -ignore \"**/dist/**\" -ignore \"**/coverage/**\" -ignore \"cdk.out/**\" -ignore \"resources-service/scripts/**\" -ignore \"resources-service/resource-json/**\" -ignore \"**/scripts-dist/**\" -f license-header.tpl .",
    "license:add:windows": "docker run --rm -v %cd%:/src ghcr.io/google/addlicense -c \"Technology Matters\" -y \"2021-2023\" -ignore \".idea/**\" -ignore \"**/node_modules/**\" -ignore \"**/dist/**\" -ignore \"**/coverage/**\" -ignore \"cdk.out/**\" -ignore \"resources-service/scripts/**\" -ignore \"resources-service/resource-json/**\" -ignore \"**/scripts-dist/**\" -f license-header.tpl .",
    "license:check:windows": "docker run --rm -v %cd%:/src ghcr.io/google/addlicense -check -c \"Technology Matters\" -y \"2021-2023\" -ignore \".idea/**\" -ignore \"**/node_modules/**\" -ignore \"**/dist/**\" -ignore \"**/coverage/**\" -ignore \"cdk.out/**\" -ignore \"resources-service\\\\scripts\\\\**\" -ignore \"resources-service\\\\resource-json\\\\**\" -ignore \"**\\\\scripts-dist\\\\**\" -f license-header.tpl .",
    "license:add:windows:local": "addlicense -c \"Technology Matters\" -y \"2021-2023\" -ignore .idea\\\\** -ignore node_modules\\\\** -ignore \"**\\\\node_modules\\\\**\" -ignore \"**\\\\dist\\\\**\" -ignore \"**\\\\coverage\\\\**\" -ignore cdk.out\\\\** -ignore \"resources-service\\\\scripts\\\\**\" -ignore \"resources-service\\\\resource-json\\\\**\" -ignore \"**\\\\scripts-dist\\\\**\" -f license-header.tpl .",
    "license:check:windows:local": "addlicense -check -c \"Technology Matters\" -y \"2021-2023\" -ignore .idea\\\\** -ignore node_modules\\\\** -ignore \"**\\\\node_modules\\\\**\" -ignore \"**\\\\dist\\\\**\" -ignore \"**\\\\coverage\\\\**\" -ignore cdk.out\\\\** -ignore \"resources-service\\\\scripts\\\\**\" -ignore \"resources-service\\\\resource-json\\\\**\" -ignore \"**\\\\scripts-dist\\\\**\" -f license-header.tpl .",
    "waiton:db": "wait-on tcp:5432",
    "waiton:es": "wait-on http-get://localhost:9200"
  }
}
