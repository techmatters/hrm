# Copyright (C) 2021-2023 Technology Matters
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see https://www.gnu.org/licenses/.

name: 'Deploy All HRM Lambdas'
on:
  workflow_dispatch:
    inputs:
      environment:
        description: HRM environment to deploy.
        default: development
        required: true
        type: choice
        options:
          - development
          - staging
          - production
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
    inputs:
      environment:
        description: HRM environment to deploy. E.G = development, staging, production (must match with the AWS environment value). Default value = development
        type: string
        default: development
        required: true
      send-slack-message:
        description: 'Specifies if should send a Slack message at the end of successful run. Defaults to true'
        required: false
        default: 'true'
        type: string

env:
  # if anything is set as a secret, it can't be used in outputs. So we need to set it as an env var
  PRIMARY_AWS_REGION: us-east-1

jobs:
  build_and_deploy_lambdas:
    strategy:
      matrix:
        lambda_path:
          - hrm-domain/lambdas/files-urls
          - hrm-domain/lambdas/contact-retrieve-transcript
          - hrm-domain/lambdas/search-index-consumer
          - hrm-domain/lambdas/entity-json-export
          - lambdas/job-complete
          - resources-domain/lambdas/import-consumer
          - resources-domain/lambdas/import-producer
          - resources-domain/lambdas/search-index
          - hrm-domain/lambdas/custom-integrations/uscr-dispatcher
          - hrm-domain/lambdas/custom-integrations/uscr-beacon-poller

    uses: ./.github/workflows/hrm-lambda-deploy.yml
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    with:
      send-slack-message: 'false'
      environment: ${{ inputs.environment }}
      lambda_path: ${{ matrix.lambda_path }}
      skip-matrix-update: 'true'
  update_matrix:
    needs: [build_and_deploy_lambdas]
    name: Update Version Matrix Spreadsheet
    runs-on: ubuntu-latest
    concurrency:
      group: update-version-matrix
      cancel-in-progress: false

    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        lambda_path:
          - hrm-domain/lambdas/files-urls
          - hrm-domain/lambdas/contact-retrieve-transcript
          - hrm-domain/lambdas/search-index-consumer
          - lambdas/job-complete
          - resources-domain/lambdas/import-consumer
          - resources-domain/lambdas/import-producer
          - resources-domain/lambdas/search-index
          - hrm-domain/lambdas/custom-integrations/uscr-dispatcher
          - hrm-domain/lambdas/custom-integrations/uscr-beacon-poller
        include: ${{ fromJson(needs.build_and_deploy_lambdas.outputs.matrix_json) }}
      # Update deployment matrix with region as identifier and lambda path as service repo
    steps:
      - name: Update deployment matrix
        id: update-deployment-matrix
        uses: techmatters/flex-plugins/.github/actions/deployment-matrix@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.PRIMARY_AWS_REGION }}
          identifier: ${{ matrix.region }}
          environment: ${{ inputs.environment }}
          service_repo: ${{ inputs.lambda_path }}
          version_tag: ${{ github.ref_name }}